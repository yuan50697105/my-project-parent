<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.myproject.app.bill.mapper.BillItemMapper">
  <resultMap id="BaseResultMap" type="org.myproject.app.bill.pojo.BillItem">
    <!--@mbg.generated-->
    <!--@Table bill_item-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bill_id" jdbcType="BIGINT" property="billId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="unit" jdbcType="INTEGER" property="unit" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, bill_id, content, `name`, quantity, unit, unit_price, total_price
  </sql>
  <select id="selectByExample" parameterType="org.myproject.app.bill.pojo.BillItemExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bill_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from bill_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from bill_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.myproject.app.bill.pojo.BillItemExample">
    <!--@mbg.generated-->
    delete from bill_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.myproject.app.bill.pojo.BillItem" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into bill_item (bill_id, content, `name`, 
      quantity, unit, unit_price, 
      total_price)
    values (#{billId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=INTEGER}, #{unit,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, 
      #{totalPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.myproject.app.bill.pojo.BillItem" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into bill_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        bill_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        #{billId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.myproject.app.bill.pojo.BillItemExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from bill_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update bill_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.billId != null">
        bill_id = #{record.billId,jdbcType=BIGINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update bill_item
    set id = #{record.id,jdbcType=BIGINT},
      bill_id = #{record.billId,jdbcType=BIGINT},
      content = #{record.content,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      total_price = #{record.totalPrice,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.myproject.app.bill.pojo.BillItem">
    <!--@mbg.generated-->
    update bill_item
    <set>
      <if test="billId != null">
        bill_id = #{billId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.myproject.app.bill.pojo.BillItem">
    <!--@mbg.generated-->
    update bill_item
    set bill_id = #{billId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      unit = #{unit,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectAllByBillId" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from bill_item
        where bill_id=#{billId,jdbcType=BIGINT}
    </select>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update bill_item
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="bill_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.billId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.content,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="quantity = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.quantity,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="unit = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.unit,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="unit_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.unitPrice,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="total_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.totalPrice,jdbcType=DECIMAL}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update bill_item
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="bill_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.billId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.billId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.content != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.content,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.name != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="quantity = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.quantity != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.quantity,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="unit = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.unit != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.unit,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="unit_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.unitPrice != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.unitPrice,jdbcType=DECIMAL}
          </if>
        </foreach>
      </trim>
      <trim prefix="total_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.totalPrice != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.totalPrice,jdbcType=DECIMAL}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into bill_item
    (bill_id, content, `name`, quantity, unit, unit_price, total_price)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.billId,jdbcType=BIGINT}, #{item.content,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, 
        #{item.quantity,jdbcType=INTEGER}, #{item.unit,jdbcType=INTEGER}, #{item.unitPrice,jdbcType=DECIMAL}, 
        #{item.totalPrice,jdbcType=DECIMAL})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="org.myproject.app.bill.pojo.BillItem" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into bill_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      bill_id,
      content,
      `name`,
      quantity,
      unit,
      unit_price,
      total_price,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{billId,jdbcType=BIGINT},
      #{content,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},
      #{quantity,jdbcType=INTEGER},
      #{unit,jdbcType=INTEGER},
      #{unitPrice,jdbcType=DECIMAL},
      #{totalPrice,jdbcType=DECIMAL},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      bill_id = #{billId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      unit = #{unit,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="org.myproject.app.bill.pojo.BillItem" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into bill_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="billId != null">
        bill_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="billId != null">
        #{billId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="billId != null">
        bill_id = #{billId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
</mapper>