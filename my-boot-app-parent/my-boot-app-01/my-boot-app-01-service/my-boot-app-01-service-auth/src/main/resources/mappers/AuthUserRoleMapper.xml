<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.myproject.app.db.auth.mapper.AuthUserRoleMapper">
  <resultMap id="BaseResultMap" type="org.myproject.app.db.auth.pojo.AuthUserRole">
    <!--@mbg.generated-->
    <!--@Table auth_user_role-->
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    user_id, role_id
  </sql>
  <select id="selectByExample" parameterType="org.myproject.app.db.auth.pojo.AuthUserRoleExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from auth_user_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--@mbg.generated-->
    delete from auth_user_role
    where user_id = #{userId,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.myproject.app.db.auth.pojo.AuthUserRoleExample">
    <!--@mbg.generated-->
    delete from auth_user_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.myproject.app.db.auth.pojo.AuthUserRole">
    <!--@mbg.generated-->
    insert into auth_user_role (user_id, role_id)
    values (#{userId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.myproject.app.db.auth.pojo.AuthUserRole">
    <!--@mbg.generated-->
    insert into auth_user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.myproject.app.db.auth.pojo.AuthUserRoleExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from auth_user_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update auth_user_role
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update auth_user_role
    set user_id = #{record.userId,jdbcType=BIGINT},
      role_id = #{record.roleId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <delete id="deleteByUserIdIn">
        <!--@mbg.generated-->
        delete from auth_user_role
        where user_id in
        <foreach close=")" collection="userIdCollection" index="index" item="item" open="(" separator=",">
            #{item,jdbcType=BIGINT}
        </foreach>
    </delete>
  <delete id="deleteByRoleIdIn">
        <!--@mbg.generated-->
        delete from auth_user_role
        where role_id in
        <foreach close=")" collection="roleIdCollection" index="index" item="item" open="(" separator=",">
            #{item,jdbcType=BIGINT}
        </foreach>
    </delete>
  <delete id="deleteByRoleId">
        <!--@mbg.generated-->
        delete from auth_user_role
        where role_id=#{roleId,jdbcType=BIGINT}
    </delete>
  <delete id="deleteByUserId">
        <!--@mbg.generated-->
        delete from auth_user_role
        where user_id=#{userId,jdbcType=BIGINT}
    </delete>
    <resultMap id="selectAllRoleByUserIdResultMap" type="org.myproject.app.db.auth.pojo.RoleByUserResult">
        <result column="id" property="id" />
        <result column="name" property="name" />
        <result column="description" property="description" />
        <result column="enabled" property="enabled" />
    </resultMap>
    <resultMap id="selectAllUserByRoleIdResultMap" type="org.myproject.app.db.auth.pojo.UserRoleResult">
        <result column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="name" property="name" />
        <result column="enabled" property="enabled" />
        <result column="last_login_time" property="lastLoginTime" />
        <result column="create_time" property="createTime" />
    </resultMap>
    <select id="selectAllUserByRoleId" resultMap="selectAllUserByRoleIdResultMap">
        WITH ROLE AS (SELECT user_id FROM auth_user_role WHERE role_id = #{roleId,jdbcType=BIGINT})
        SELECT id, username, password, name, enabled, last_login_time, create_time
        FROM auth_user
        WHERE id IN (SELECT user_id FROM ROLE)
    </select>

    <select id="selectAllRoleByUserId" resultMap="selectAllRoleByUserIdResultMap">
        SELECT id, name, description, enabled
        FROM auth_role
        WHERE id IN (SELECT role_id FROM auth_user_role WHERE user_id =#{userId,jdbcType=BIGINT})
    </select>
</mapper>