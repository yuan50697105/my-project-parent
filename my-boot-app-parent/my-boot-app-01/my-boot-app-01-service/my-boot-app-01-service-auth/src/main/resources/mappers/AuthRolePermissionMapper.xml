<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.myproject.app.auth.mapper.AuthRolePermissionMapper">
    <resultMap id="selectAllPermissionByUserIdResultMap" type="org.myproject.app.auth.pojo.PermissionByUserIdResult">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="code" property="code"/>
        <result column="description" property="description"/>
        <result column="enabled" property="enabled"/>
    </resultMap>
    <resultMap id="selectAllPermissionByRoleIdResultMap" type="org.myproject.app.auth.pojo.PermissionByRoleResult">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="code" property="code"/>
        <result column="description" property="description"/>
        <result column="enabled" property="enabled"/>
    </resultMap>
    <resultMap id="BaseResultMap" type="org.myproject.app.auth.pojo.AuthRolePermission">
        <!--@mbg.generated-->
        <!--@Table auth_role_permission-->
        <id column="role_id" jdbcType="BIGINT" property="roleId"/>
        <id column="permission_id" jdbcType="BIGINT" property="permissionId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        role_id, permission_id
    </sql>
    <select id="selectByExample" parameterType="org.myproject.app.auth.pojo.AuthRolePermissionExample"
            resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from auth_role_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="map">
        <!--@mbg.generated-->
        delete from auth_role_permission
        where role_id = #{roleId,jdbcType=BIGINT}
        and permission_id = #{permissionId,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="org.myproject.app.auth.pojo.AuthRolePermissionExample">
        <!--@mbg.generated-->
        delete from auth_role_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.myproject.app.auth.pojo.AuthRolePermission">
        <!--@mbg.generated-->
        insert into auth_role_permission (role_id, permission_id)
        values (#{roleId,jdbcType=BIGINT}, #{permissionId,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="org.myproject.app.auth.pojo.AuthRolePermission">
        <!--@mbg.generated-->
        insert into auth_role_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="permissionId != null">
                permission_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="permissionId != null">
                #{permissionId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.myproject.app.auth.pojo.AuthRolePermissionExample"
            resultType="java.lang.Long">
        <!--@mbg.generated-->
        select count(*) from auth_role_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--@mbg.generated-->
        update auth_role_permission
        <set>
            <if test="record.roleId != null">
                role_id = #{record.roleId,jdbcType=BIGINT},
            </if>
            <if test="record.permissionId != null">
                permission_id = #{record.permissionId,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--@mbg.generated-->
        update auth_role_permission
        set role_id = #{record.roleId,jdbcType=BIGINT},
        permission_id = #{record.permissionId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <delete id="deleteByRoleIdIn">
        <!--@mbg.generated-->
        delete from auth_role_permission
        where role_id in
        <foreach close=")" collection="roleIdCollection" index="index" item="item" open="(" separator=",">
            #{item,jdbcType=BIGINT}
        </foreach>
    </delete>
    <delete id="deleteByRoleId">
        <!--@mbg.generated-->
        delete from auth_role_permission
        where role_id=#{roleId,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByPermissionIdIn">
        <!--@mbg.generated-->
        delete from auth_role_permission
        where permission_id in
        <foreach close=")" collection="permissionIdCollection" index="index" item="item" open="(" separator=",">
            #{item,jdbcType=BIGINT}
        </foreach>
    </delete>
    <delete id="deleteByPermissionId">
        <!--@mbg.generated-->
        delete from auth_role_permission
        where permission_id=#{permissionId,jdbcType=BIGINT}
    </delete>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update auth_role_permission
        <trim prefix="set" suffixOverrides=","/>
        where role_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.roleId,jdbcType=BIGINT}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update auth_role_permission
        <trim prefix="set" suffixOverrides=","/>
        where role_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.roleId,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" parameterType="map">
        <!--@mbg.generated-->
        insert into auth_role_permission
        (role_id, permission_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.roleId,jdbcType=BIGINT}, #{item.permissionId,jdbcType=BIGINT})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" parameterType="org.myproject.app.auth.pojo.AuthRolePermission">
        <!--@mbg.generated-->
        insert into auth_role_permission
        (role_id, permission_id)
        values
        (#{roleId,jdbcType=BIGINT}, #{permissionId,jdbcType=BIGINT})
        on duplicate key update
        role_id = #{roleId,jdbcType=BIGINT},
        permission_id = #{permissionId,jdbcType=BIGINT}
    </insert>
    <insert id="insertOrUpdateSelective" parameterType="org.myproject.app.auth.pojo.AuthRolePermission">
        <!--@mbg.generated-->
        insert into auth_role_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="permissionId != null">
                permission_id,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="permissionId != null">
                #{permissionId,jdbcType=BIGINT},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=BIGINT},
            </if>
            <if test="permissionId != null">
                permission_id = #{permissionId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="selectAllPermissionByRoleId" resultMap="selectAllPermissionByRoleIdResultMap">
        select id, name, code, description, enabled from auth_permission where id in (select permission_id from
        auth_role_permission where role_id=#{roleId,jdbcType=BIGINT})
    </select>
    <select id="selectAllPermissionByUserId" resultMap="selectAllPermissionByUserIdResultMap">
        select id, name, code, description, enabled from auth_permission where id in (select permission_id from
        auth_role_permission where role_id in (select role_id from auth_user_role where
        user_id=#{userId,jdbcType=BIGINT}))
    </select>
</mapper>