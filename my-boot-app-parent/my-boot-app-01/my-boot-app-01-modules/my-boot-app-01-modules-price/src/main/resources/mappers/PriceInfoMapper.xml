<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.myproject.app.price.mapper.PriceInfoMapper">
    <resultMap id="BaseResultMap" type="org.myproject.app.price.pojo.PriceInfo">
        <!--@mbg.generated-->
        <!--@Table price_info-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="point" jdbcType="INTEGER" property="point"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="internal" jdbcType="DECIMAL" property="internal"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and $ criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and $ criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and $ criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and $ criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and $ criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and $ criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and $ criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and $ criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, code, `type`, point, price, internal
    </sql>
    <select id="selectByExample" parameterType="org.myproject.app.price.pojo.PriceInfoExample"
            resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from price_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by $ orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from price_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from price_info
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="org.myproject.app.price.pojo.PriceInfoExample">
        <!--@mbg.generated-->
        delete from price_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.myproject.app.price.pojo.PriceInfo"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into price_info (code, `type`, point,
        price, internal)
        values (#{code,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{point,jdbcType=INTEGER},
        #{price,jdbcType=DECIMAL}, #{internal,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.myproject.app.price.pojo.PriceInfo"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into price_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null">
                code,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="point != null">
                point,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="internal != null">
                internal,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="point != null">
                #{point,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="internal != null">
                #{internal,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.myproject.app.price.pojo.PriceInfoExample"
            resultType="java.lang.Long">
        <!--@mbg.generated-->
        select count(*) from price_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--@mbg.generated-->
        update price_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                `type` = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.point != null">
                point = #{record.point,jdbcType=INTEGER},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.internal != null">
                internal = #{record.internal,jdbcType=DECIMAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--@mbg.generated-->
        update price_info
        set id = #{record.id,jdbcType=BIGINT},
        code = #{record.code,jdbcType=VARCHAR},
        `type` = #{record.type,jdbcType=VARCHAR},
        point = #{record.point,jdbcType=INTEGER},
        price = #{record.price,jdbcType=DECIMAL},
        internal = #{record.internal,jdbcType=DECIMAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.myproject.app.price.pojo.PriceInfo">
        <!--@mbg.generated-->
        update price_info
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=VARCHAR},
            </if>
            <if test="point != null">
                point = #{point,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="internal != null">
                internal = #{internal,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.myproject.app.price.pojo.PriceInfo">
        <!--@mbg.generated-->
        update price_info
        set code = #{code,jdbcType=VARCHAR},
        `type` = #{type,jdbcType=VARCHAR},
        point = #{point,jdbcType=INTEGER},
        price = #{price,jdbcType=DECIMAL},
        internal = #{internal,jdbcType=DECIMAL}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectAllByIdIn" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from price_info
        where id in
        <foreach close=")" collection="idCollection" index="index" item="item" open="(" separator=",">
            #{item,jdbcType=BIGINT}
        </foreach>
    </select>
    <delete id="deleteByIdIn">
        <!--@mbg.generated-->
        delete from price_info
        where id in
        <foreach close=")" collection="idCollection" index="index" item="item" open="(" separator=",">
            #{item,jdbcType=BIGINT}
        </foreach>
    </delete>
    <select id="selectAllByCodeIn" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from price_info
        where code in
        <foreach close=")" collection="codeCollection" index="index" item="item" open="(" separator=",">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </select>
    <select id="selectAllByCode" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from price_info
        where code=#{code,jdbcType=VARCHAR}
    </select>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update price_info
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="code = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.code,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="`type` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.type,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="point = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.point,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="price = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.price,jdbcType=DECIMAL}
                </foreach>
            </trim>
            <trim prefix="internal = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.internal,jdbcType=DECIMAL}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into price_info
        (code, `type`, point, price, internal)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.code,jdbcType=VARCHAR}, #{item.type,jdbcType=VARCHAR}, #{item.point,jdbcType=INTEGER},
            #{item.price,jdbcType=DECIMAL}, #{item.internal,jdbcType=DECIMAL})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="org.myproject.app.price.pojo.PriceInfo"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into price_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            code,
            `type`,
            point,
            price,
            internal,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            #{code,jdbcType=VARCHAR},
            #{type,jdbcType=VARCHAR},
            #{point,jdbcType=INTEGER},
            #{price,jdbcType=DECIMAL},
            #{internal,jdbcType=DECIMAL},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            code = #{code,jdbcType=VARCHAR},
            `type` = #{type,jdbcType=VARCHAR},
            point = #{point,jdbcType=INTEGER},
            price = #{price,jdbcType=DECIMAL},
            internal = #{internal,jdbcType=DECIMAL},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="org.myproject.app.price.pojo.PriceInfo" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into price_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="point != null">
                point,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="internal != null">
                internal,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="point != null">
                #{point,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="internal != null">
                #{internal,jdbcType=DECIMAL},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=VARCHAR},
            </if>
            <if test="point != null">
                point = #{point,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="internal != null">
                internal = #{internal,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
</mapper>