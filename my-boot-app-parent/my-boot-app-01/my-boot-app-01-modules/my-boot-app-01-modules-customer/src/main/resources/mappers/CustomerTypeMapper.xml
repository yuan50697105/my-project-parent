<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.myproject.app.customer.mapper.CustomerTypeMapper">
    <resultMap id="BaseResultMap" type="org.myproject.app.customer.pojo.CustomerType">
        <!--@mbg.generated-->
        <!--@Table customer_type-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="enabled" jdbcType="INTEGER" property="enabled"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and $ criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and $ criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and $ criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and $ criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--@mbg.generated-->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and $ criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and $ criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and $ criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and $ criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `name`, description, enabled
    </sql>
    <select id="selectByExample" parameterType="org.myproject.app.customer.pojo.CustomerTypeExample"
            resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from customer_type
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by $ orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from customer_type
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from customer_type
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="org.myproject.app.customer.pojo.CustomerTypeExample">
        <!--@mbg.generated-->
        delete from customer_type
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.myproject.app.customer.pojo.CustomerType"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into customer_type (`name`, description, enabled
        )
        values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{enabled,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="org.myproject.app.customer.pojo.CustomerType" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into customer_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.myproject.app.customer.pojo.CustomerTypeExample"
            resultType="java.lang.Long">
        <!--@mbg.generated-->
        select count(*) from customer_type
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--@mbg.generated-->
        update customer_type
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.enabled != null">
                enabled = #{record.enabled,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--@mbg.generated-->
        update customer_type
        set id = #{record.id,jdbcType=BIGINT},
        `name` = #{record.name,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        enabled = #{record.enabled,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.myproject.app.customer.pojo.CustomerType">
        <!--@mbg.generated-->
        update customer_type
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.myproject.app.customer.pojo.CustomerType">
        <!--@mbg.generated-->
        update customer_type
        set `name` = #{name,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        enabled = #{enabled,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <delete id="deleteByIdIn">
        <!--@mbg.generated-->
        delete from customer_type
        where id in
        <foreach close=")" collection="idCollection" index="index" item="item" open="(" separator=",">
            #{item,jdbcType=BIGINT}
        </foreach>
    </delete>
    <select id="selectAllByIdIn" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from customer_type
        where id in
        <foreach close=")" collection="idCollection" index="index" item="item" open="(" separator=",">
            #{item,jdbcType=BIGINT}
        </foreach>
    </select>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update customer_type
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="`name` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="description = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.description,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="enabled = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.enabled,jdbcType=INTEGER}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into customer_type
        (`name`, description, enabled)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.name,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}, #{item.enabled,jdbcType=INTEGER}
            )
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id"
            parameterType="org.myproject.app.customer.pojo.CustomerType" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into customer_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            `name`,
            description,
            enabled,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            #{name,jdbcType=VARCHAR},
            #{description,jdbcType=VARCHAR},
            #{enabled,jdbcType=INTEGER},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            `name` = #{name,jdbcType=VARCHAR},
            description = #{description,jdbcType=VARCHAR},
            enabled = #{enabled,jdbcType=INTEGER},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="org.myproject.app.customer.pojo.CustomerType" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into customer_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=INTEGER},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
</mapper>